<script component>

	exports.name = 'MySQL';
	exports.group = 'Databases';
	exports.icon = 'ti ti-database';
	exports.author = 'Total.js';
	exports.version = '2';
	exports.config = {
    query : "",
    connection : "",
    connectionData : ""
  };
	exports.inputs = [{ id: 'input', name: 'Input' }];
	exports.outputs = [{ id: 'output', name: 'Output' }];
	exports.POOLS = {};
  exports.meta = {readonly: true, remove: false};
  const SharedMemory = REQUIRE('definitions/shared.js');//_main.exports;

	exports.make = function(instance, config) {

		const mysql = require('mysql2');
    var templates = {};
		var MYSQL;

		instance.message = async function($) {
      var data = $.data ?? $;
      var session = new SharedMemory($);
      await session.ready;
      if(!(session.sessionId && session.reply && typeof session.reply == "function")){
          session = SharedMemory.empty;
          session.data = data;
      }else{
        data  =  session.data;
      }

			if (!MYSQL || !MYSQL.pool){
        var message = 'MySQL connection not configured';
          instance.throw(message);
					if(typeof data != "object"){
						data = {
							data 
						}
					}
          data.results = {
            error : {code :0, message}, results : null, fields : null 
          }
          return;
      }
      var query = `${templates['QUERY']({
          data : session.data ?? {},
          session : session,
          variables : {...instance.main.variables2,...instance.main.variables,}
      })}`.trim();
			if(typeof data != "object"){
        data = {
          data 
        }
      }
      if(!query){
        var message = 'Query is empty';
        instance.throw(message);
        data.results = {
          error : {code :0, message}, results : null, fields : null 
        }
        return;
      }
			MYSQL.pool.query(query, function(error, results, fields) {
				if (error) {
					instance.throw( error.message || error );
        }
        data.results = {
          error : {
						code : error.code || 1,
						message : error.message || error
					}, results, fields
        };
				$.send('output',data);
			})
		};

		instance.close = function(callback) {
			if (MYSQL) {
				MYSQL.count--;
				if (MYSQL.count === 0) {
          // last component using this connection so destroy it
					MYSQL.pool.end();
					delete exports.POOLS[config.connectionData];
				}
				MYSQL = null;
			}
		};

		instance.configure = function() {

      ["query", "connection"].map(key=>{
          if(config[key]){
              templates[key.toUpperCase()] = Tangular.compile(config[key]);
          }else{
              templates[key] = ()=>"";
          }
      });
      config.connectionData = `${templates['CONNECTION']({
          data : {},
          session : {},
          variables : {...instance.main.variables2,...instance.main.variables,}
      })}`.trim();
			// same connection, ignore
			if (!config.connectionData || (MYSQL && MYSQL.string === config.connectionData)){
				return;
      }
			instance.close();
      
			// already existing connection, use it
			if (exports.POOLS[config.connectionData]) {
				MYSQL = exports.POOLS[config.connectionData];
				MYSQL.count++;
				return;
			}

			var pool = mysql.createPool(config.connectionData);
			MYSQL = exports.POOLS[config.connectionData] = {
				pool,
				count: 1,
				string: config.connectionData
			};

			pool.query('SELECT NOW() AS message;', (err, response) => {
				if (err)
					instance.throw(err.message);
			});
      instance.save() // save config
		};

		instance.configure();

	};

</script>

<readme>
Execute MySQL Query

## MySQL Query 
```sql
SELECT * FROM tblname
```
</readme>

<settings>
	<div class="padding">
		<div class="row m">
			<div class="col-md-12">
				<ui-component name="input" path="?.connection" config="required:1">Connection string</ui-component>
				<div class="help">e.g.: mysql://user:password@localhost:3306/dbname</div>
			</div>
			<div class="col-md-12">
				<ui-component name="codemirror" path="?.query" config="type:sql;required:true;height:300" class="m">MySQL Query</ui-component>
			</div>
		</div>
	</div>
</settings>

<style>
	.CLASS footer { padding: 10px; font-size: 12px; }
</style>

<script>

</script>

<body>
	<header>
		<i class="ICON"></i>NAME
	</header>
	<footer>
		<ui-bind path="STATUS.error" config="text" class="red"></ui-bind>
	</footer>
</body>